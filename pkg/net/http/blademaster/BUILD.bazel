load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "context.go",
        "cors.go",
        "criticality.go",
        "csrf.go",
        "logger.go",
        "metadata.go",
        "metrics.go",
        "perf.go",
        "prometheus.go",
        "ratelimit.go",
        "recovery.go",
        "routergroup.go",
        "server.go",
        "trace.go",
        "tree.go",
        "utils.go",
    ],
    importpath = "github.com/CloudZou/punk/pkg/net/http/blademaster",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/conf/dsn:go_default_library",
        "//pkg/conf/env:go_default_library",
        "//pkg/ecode:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/net/criticality:go_default_library",
        "//pkg/net/http/blademaster/binding:go_default_library",
        "//pkg/net/http/blademaster/render:go_default_library",
        "//pkg/net/ip:go_default_library",
        "//pkg/net/metadata:go_default_library",
        "//pkg/net/netutil/breaker:go_default_library",
        "//pkg/net/trace:go_default_library",
        "//pkg/ratelimit:go_default_library",
        "//pkg/ratelimit/bbr:go_default_library",
        "//pkg/stat/metric:go_default_library",
        "//pkg/time:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/gogo/protobuf/types:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["server_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//pkg/net/criticality:go_default_library",
        "//pkg/net/metadata:go_default_library",
        "//pkg/time:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
    ],
)
